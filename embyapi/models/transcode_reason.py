# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TranscodeReason(str, Enum):
    """
    TranscodeReason
    """

    """
    allowed enum values
    """
    CONTAINERNOTSUPPORTED = 'ContainerNotSupported'
    VIDEOCODECNOTSUPPORTED = 'VideoCodecNotSupported'
    AUDIOCODECNOTSUPPORTED = 'AudioCodecNotSupported'
    CONTAINERBITRATEEXCEEDSLIMIT = 'ContainerBitrateExceedsLimit'
    AUDIOBITRATENOTSUPPORTED = 'AudioBitrateNotSupported'
    AUDIOCHANNELSNOTSUPPORTED = 'AudioChannelsNotSupported'
    VIDEORESOLUTIONNOTSUPPORTED = 'VideoResolutionNotSupported'
    UNKNOWNVIDEOSTREAMINFO = 'UnknownVideoStreamInfo'
    UNKNOWNAUDIOSTREAMINFO = 'UnknownAudioStreamInfo'
    AUDIOPROFILENOTSUPPORTED = 'AudioProfileNotSupported'
    AUDIOSAMPLERATENOTSUPPORTED = 'AudioSampleRateNotSupported'
    ANAMORPHICVIDEONOTSUPPORTED = 'AnamorphicVideoNotSupported'
    INTERLACEDVIDEONOTSUPPORTED = 'InterlacedVideoNotSupported'
    SECONDARYAUDIONOTSUPPORTED = 'SecondaryAudioNotSupported'
    REFFRAMESNOTSUPPORTED = 'RefFramesNotSupported'
    VIDEOBITDEPTHNOTSUPPORTED = 'VideoBitDepthNotSupported'
    VIDEOBITRATENOTSUPPORTED = 'VideoBitrateNotSupported'
    VIDEOFRAMERATENOTSUPPORTED = 'VideoFramerateNotSupported'
    VIDEOLEVELNOTSUPPORTED = 'VideoLevelNotSupported'
    VIDEOPROFILENOTSUPPORTED = 'VideoProfileNotSupported'
    AUDIOBITDEPTHNOTSUPPORTED = 'AudioBitDepthNotSupported'
    SUBTITLECODECNOTSUPPORTED = 'SubtitleCodecNotSupported'
    DIRECTPLAYERROR = 'DirectPlayError'
    VIDEORANGENOTSUPPORTED = 'VideoRangeNotSupported'
    SUBTITLECONTENTOPTIONSENABLED = 'SubtitleContentOptionsEnabled'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TranscodeReason from a JSON string"""
        return cls(json.loads(json_str))


