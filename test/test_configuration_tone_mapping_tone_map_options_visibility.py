# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.configuration_tone_mapping_tone_map_options_visibility import ConfigurationToneMappingToneMapOptionsVisibility

class TestConfigurationToneMappingToneMapOptionsVisibility(unittest.TestCase):
    """ConfigurationToneMappingToneMapOptionsVisibility unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationToneMappingToneMapOptionsVisibility:
        """Test ConfigurationToneMappingToneMapOptionsVisibility
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationToneMappingToneMapOptionsVisibility`
        """
        model = ConfigurationToneMappingToneMapOptionsVisibility()
        if include_optional:
            return ConfigurationToneMappingToneMapOptionsVisibility(
                show_advanced = True,
                is_software_tone_mapping_available = True,
                is_any_hardware_tone_mapping_available = True,
                show_nvidia_options = True,
                show_quick_sync_options = True,
                show_vaapi_options = True,
                is_open_cl_available = True,
                is_open_cl_super_t_available = True,
                is_vaapi_native_available = True,
                is_quick_sync_native_available = True,
                operating_system = 'Windows'
            )
        else:
            return ConfigurationToneMappingToneMapOptionsVisibility(
        )
        """

    def testConfigurationToneMappingToneMapOptionsVisibility(self):
        """Test ConfigurationToneMappingToneMapOptionsVisibility"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
