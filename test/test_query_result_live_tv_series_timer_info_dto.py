# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.query_result_live_tv_series_timer_info_dto import QueryResultLiveTvSeriesTimerInfoDto

class TestQueryResultLiveTvSeriesTimerInfoDto(unittest.TestCase):
    """QueryResultLiveTvSeriesTimerInfoDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryResultLiveTvSeriesTimerInfoDto:
        """Test QueryResultLiveTvSeriesTimerInfoDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryResultLiveTvSeriesTimerInfoDto`
        """
        model = QueryResultLiveTvSeriesTimerInfoDto()
        if include_optional:
            return QueryResultLiveTvSeriesTimerInfoDto(
                items = [
                    embyapi.models.live_tv/series_timer_info_dto.LiveTv.SeriesTimerInfoDto(
                        record_any_time = True, 
                        skip_episodes_in_library = True, 
                        match_existing_items_with_any_library = True, 
                        record_any_channel = True, 
                        keep_up_to = 56, 
                        max_recording_seconds = 56, 
                        record_new_only = True, 
                        channel_ids = [
                            ''
                            ], 
                        days = [
                            'Sunday'
                            ], 
                        image_tags = {
                            'key' : ''
                            }, 
                        parent_thumb_item_id = '', 
                        parent_thumb_image_tag = '', 
                        parent_primary_image_item_id = '', 
                        parent_primary_image_tag = '', 
                        series_id = '', 
                        keywords = [
                            embyapi.models.live_tv/keyword_info.LiveTv.KeywordInfo(
                                keyword_type = 'Name', 
                                keyword = '', )
                            ], 
                        timer_type = 'Program', 
                        id = '', 
                        type = '', 
                        server_id = '', 
                        channel_id = '', 
                        channel_name = '', 
                        channel_number = '', 
                        channel_primary_image_tag = '', 
                        program_id = '', 
                        name = '', 
                        overview = '', 
                        parent_folder_id = '', 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        priority = 56, 
                        pre_padding_seconds = 56, 
                        post_padding_seconds = 56, 
                        is_pre_padding_required = True, 
                        parent_backdrop_item_id = '', 
                        parent_backdrop_image_tags = [
                            ''
                            ], 
                        is_post_padding_required = True, 
                        keep_until = 'UntilDeleted', )
                    ],
                total_record_count = 56
            )
        else:
            return QueryResultLiveTvSeriesTimerInfoDto(
        )
        """

    def testQueryResultLiveTvSeriesTimerInfoDto(self):
        """Test QueryResultLiveTvSeriesTimerInfoDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
