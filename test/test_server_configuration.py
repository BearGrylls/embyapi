# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.server_configuration import ServerConfiguration

class TestServerConfiguration(unittest.TestCase):
    """ServerConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerConfiguration:
        """Test ServerConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerConfiguration`
        """
        model = ServerConfiguration()
        if include_optional:
            return ServerConfiguration(
                enable_upn_p = True,
                public_port = 56,
                public_https_port = 56,
                http_server_port_number = 56,
                https_port_number = 56,
                enable_https = True,
                certificate_path = '',
                certificate_password = '',
                is_port_authorized = True,
                auto_run_web_app = True,
                enable_remote_access = True,
                log_all_query_times = True,
                enable_case_sensitive_item_ids = True,
                metadata_path = '',
                metadata_network_path = '',
                preferred_metadata_language = '',
                metadata_country_code = '',
                sort_remove_words = [
                    ''
                    ],
                library_monitor_delay_seconds = 56,
                enable_dashboard_response_caching = True,
                dashboard_source_path = '',
                image_saving_convention = 'Legacy',
                enable_automatic_restart = True,
                server_name = '',
                preferred_detected_remote_address_family = 'Unspecified',
                wan_ddns = '',
                ui_culture = '',
                remote_client_bitrate_limit = 56,
                local_network_subnets = [
                    ''
                    ],
                local_network_addresses = [
                    ''
                    ],
                enable_external_content_in_suggestions = True,
                require_https = True,
                is_behind_proxy = True,
                remote_ip_filter = [
                    ''
                    ],
                is_remote_ip_filter_blacklist = True,
                image_extraction_timeout_ms = 56,
                path_substitutions = [
                    embyapi.models.path_substitution.PathSubstitution(
                        from = '', 
                        to = '', )
                    ],
                uninstalled_plugins = [
                    ''
                    ],
                collapse_video_folders = True,
                enable_original_track_titles = True,
                vacuum_database_on_startup = True,
                simultaneous_stream_limit = 56,
                database_cache_size_mb = 56,
                enable_sq_lite_mmio = True,
                playlists_upgraded_to_m3_u = True,
                image_extractor_upgraded1 = True,
                enable_people_letter_sub_folders = True,
                optimize_database_on_shutdown = True,
                database_analysis_limit = 56,
                disable_async_io = True,
                migrated_to_user_item_shares7 = True,
                migrated_library_options_to_db = True,
                allow_legacy_local_network_password = True,
                enable_saved_metadata_for_people = True,
                tv_channels_refreshed = True,
                proxy_header_mode = 'None',
                enable_debug_level_logging = True,
                revert_debug_logging = '',
                enable_auto_update = True,
                log_file_retention_days = 56,
                run_at_startup = True,
                is_startup_wizard_completed = True,
                cache_path = ''
            )
        else:
            return ServerConfiguration(
        )
        """

    def testServerConfiguration(self):
        """Test ServerConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
