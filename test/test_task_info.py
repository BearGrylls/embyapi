# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.task_info import TaskInfo

class TestTaskInfo(unittest.TestCase):
    """TaskInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskInfo:
        """Test TaskInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskInfo`
        """
        model = TaskInfo()
        if include_optional:
            return TaskInfo(
                name = '',
                state = 'Idle',
                current_progress_percentage = 1.337,
                id = '',
                last_execution_result = embyapi.models.task_result.TaskResult(
                    start_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'Completed', 
                    name = '', 
                    key = '', 
                    id = '', 
                    error_message = '', 
                    long_error_message = '', ),
                triggers = [
                    embyapi.models.task_trigger_info.TaskTriggerInfo(
                        type = '', 
                        time_of_day_ticks = 56, 
                        interval_ticks = 56, 
                        system_event = 'WakeFromSleep', 
                        day_of_week = 'Sunday', 
                        max_runtime_ticks = 56, )
                    ],
                description = '',
                category = '',
                is_hidden = True,
                key = ''
            )
        else:
            return TaskInfo(
        )
        """

    def testTaskInfo(self):
        """Test TaskInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
