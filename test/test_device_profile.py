# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.device_profile import DeviceProfile

class TestDeviceProfile(unittest.TestCase):
    """DeviceProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceProfile:
        """Test DeviceProfile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceProfile`
        """
        model = DeviceProfile()
        if include_optional:
            return DeviceProfile(
                name = '',
                id = '',
                supported_media_types = '',
                max_streaming_bitrate = 56,
                music_streaming_transcoding_bitrate = 56,
                max_static_music_bitrate = 56,
                direct_play_profiles = [
                    embyapi.models.direct_play_profile.DirectPlayProfile(
                        container = '', 
                        audio_codec = '', 
                        video_codec = '', 
                        type = 'Audio', )
                    ],
                transcoding_profiles = [
                    embyapi.models.transcoding_profile.TranscodingProfile(
                        container = '', 
                        type = 'Audio', 
                        video_codec = '', 
                        audio_codec = '', 
                        protocol = '', 
                        estimate_content_length = True, 
                        enable_mpegts_m2_ts_mode = True, 
                        transcode_seek_info = 'Auto', 
                        copy_timestamps = True, 
                        context = 'Streaming', 
                        max_audio_channels = '', 
                        min_segments = 56, 
                        segment_length = 56, 
                        break_on_non_key_frames = True, 
                        allow_interlaced_video_stream_copy = True, 
                        manifest_subtitles = '', 
                        max_manifest_subtitles = 56, 
                        max_width = 56, 
                        max_height = 56, 
                        fill_empty_subtitle_segments = True, )
                    ],
                container_profiles = [
                    embyapi.models.container_profile.ContainerProfile(
                        type = 'Audio', 
                        conditions = [
                            embyapi.models.profile_condition.ProfileCondition(
                                condition = 'Equals', 
                                property = 'AudioChannels', 
                                value = '', 
                                is_required = True, )
                            ], 
                        container = '', )
                    ],
                codec_profiles = [
                    embyapi.models.codec_profile.CodecProfile(
                        type = 'Video', 
                        conditions = [
                            embyapi.models.profile_condition.ProfileCondition(
                                condition = 'Equals', 
                                property = 'AudioChannels', 
                                value = '', 
                                is_required = True, )
                            ], 
                        apply_conditions = [
                            embyapi.models.profile_condition.ProfileCondition(
                                value = '', 
                                is_required = True, )
                            ], 
                        codec = '', 
                        container = '', )
                    ],
                response_profiles = [
                    embyapi.models.response_profile.ResponseProfile(
                        container = '', 
                        audio_codec = '', 
                        video_codec = '', 
                        type = 'Audio', 
                        org_pn = '', 
                        mime_type = '', 
                        conditions = [
                            embyapi.models.profile_condition.ProfileCondition(
                                condition = 'Equals', 
                                property = 'AudioChannels', 
                                value = '', 
                                is_required = True, )
                            ], )
                    ],
                subtitle_profiles = [
                    embyapi.models.subtitle_profile.SubtitleProfile(
                        format = '', 
                        method = 'Encode', 
                        didl_mode = '', 
                        language = '', 
                        container = '', 
                        protocol = '', )
                    ]
            )
        else:
            return DeviceProfile(
        )
        """

    def testDeviceProfile(self):
        """Test DeviceProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
