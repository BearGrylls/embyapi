# coding: utf-8

"""
    Emby Server REST API

    Explore the Emby Server API

    The version of the OpenAPI document: 4.8.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from embyapi.models.library_library_type_options import LibraryLibraryTypeOptions

class TestLibraryLibraryTypeOptions(unittest.TestCase):
    """LibraryLibraryTypeOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LibraryLibraryTypeOptions:
        """Test LibraryLibraryTypeOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LibraryLibraryTypeOptions`
        """
        model = LibraryLibraryTypeOptions()
        if include_optional:
            return LibraryLibraryTypeOptions(
                type = '',
                metadata_fetchers = [
                    embyapi.models.library/library_option_info.Library.LibraryOptionInfo(
                        name = '', 
                        setup_url = '', 
                        default_enabled = True, 
                        features = [
                            'Collections'
                            ], )
                    ],
                image_fetchers = [
                    embyapi.models.library/library_option_info.Library.LibraryOptionInfo(
                        name = '', 
                        setup_url = '', 
                        default_enabled = True, 
                        features = [
                            'Collections'
                            ], )
                    ],
                supported_image_types = [
                    'Primary'
                    ],
                default_image_options = [
                    embyapi.models.image_option.ImageOption(
                        type = 'Primary', 
                        limit = 56, 
                        min_width = 56, )
                    ]
            )
        else:
            return LibraryLibraryTypeOptions(
        )
        """

    def testLibraryLibraryTypeOptions(self):
        """Test LibraryLibraryTypeOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
